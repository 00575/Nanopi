name: R2S Image builder

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      device:
        description: 'select device to build'
        default: 'r2s'
        required: false
jobs:

  build_packages:
    name: Build r2s packages
    runs-on: ubuntu-18.04
    env:
      DEVICE: r2s
      TG: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      DEPLOY_SSHKEY: ${{ secrets.SSH_KEY }}
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo sysctl vm.swappiness=0
          nohup sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk &
          sudo -E apt update
          nohup sudo -E apt -y --no-install-recommends install jq build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf intltool rsync swig &
      
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Checkout
        run: |
          cd
          curl -sL https://raw.githubusercontent.com/00575/Nanopi/zstd-bin/zstd | sudo tee /usr/bin/zstd > /dev/null
          for i in {1..10}
          do
            curl -sL --fail https://github.com/00575/Nanopi/releases/download/cache/lede.$DEVICE.img.zst.0$i || break
          done | zstdmt -d -o lede.img || (truncate -s 20g lede.img && mkfs.btrfs -M lede.img)
          LOOP_DEVICE=$(losetup -f) && echo "LOOP_DEVICE=$LOOP_DEVICE" >> $GITHUB_ENV
          sudo losetup -P --direct-io $LOOP_DEVICE lede.img
          mkdir lede && sudo mount -o nossd,compress=zstd $LOOP_DEVICE lede
          if [ -d 'lede/.git' ]; then
          cd lede && git config --local user.email "action@github.com" && git config --local user.name "GitHub Action"
          git fetch && git reset --hard origin/openwrt-18.06-k5.4
          #git remote set-branches --add origin openwrt-18.06
          #git merge -X theirs --no-edit origin/openwrt-18.06
          else
          sudo chown $USER:$(id -gn) lede && git clone -b openwrt-18.06-k5.4 --single-branch https://github.com/immortalwrt/immortalwrt lede
          fi
      
      - name: Update feeds and packages
        run: |
          cd ~/lede
          if [ -d 'feeds' ]; then
            pushd feeds/packages; git restore .; popd
            pushd feeds/luci; git restore .; popd
            pushd feeds/routing; git restore .; popd
            pushd feeds/telephony; git restore .; popd
          fi
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          . $GITHUB_WORKSPACE/merge_packages.sh
          . $GITHUB_WORKSPACE/patches.sh
          cd
          svn export https://github.com/openwrt/luci/branches/openwrt-18.06 luci
          echo > more_luci.txt
          pushd luci
          ls -d */ | xargs -n1 -i diff -q {} ../lede/feeds/luci/{} | grep Only | grep lede | grep -E applications\|themes | awk '{print $4}' | xargs -n1 -i echo CONFIG_PACKAGE_{}=m >> ~/lede/more_luci.txt
          popd
      
      - name: Custom configure file
        run: |
          cd ~/lede
          cat $GITHUB_WORKSPACE/$DEVICE.config.seed | sed 's/\(CONFIG_PACKAGE_luci-app-[^A-Z]*=\)y/\1m/' > .config
          find package/ -type d -name luci-app-* | rev | cut -d'/' -f1 | rev | xargs -n1 -i echo CONFIG_PACKAGE_{}=m >> .config
          cat $GITHUB_WORKSPACE/extra_packages.seed >> .config
          cat more_luci.txt >> .config
          make defconfig && cat .config
      
      - name: Build and deploy packages
        run: |
          cd ~/lede
          while true; do make download -j && break || true; done     
          make package/feeds/packages/v2ray-plugin/compile || true
          sed -i 's/Kf9Qot2lLYccEzQfoCdt9img6zo5Vf+PEaoTMfa2S8k=/FGmf5rtUo3xGHyZGJi8jEa7AKin05ROfPtegmGbkCKg=/' build_dir/*/v2ray-plugin-4.37.3/go.sum
          make -j$[`nproc`+1] IGNORE_ERRORS=1
          mv `ls ~/lede/bin/targets/*/*/*imagebuilder*xz` ~/ib-$DEVICE.tar.xz
          
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          cd
          #mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          #mkdir -p ./release
          cd lede
          cp -a bin tmp ../
          #rm -rf $(find ./bin/targets/ -type d -name "packages")
          #cp -rf $(find ./bin/targets/ -type f) ../artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ../artifact/package/
          #cp $(ls -1 ../artifact/firmware/*img*) ../release/$DEVICE.img.gz
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "strDevice=$(echo $DEVICE | awk '{print toupper($0)}')" >> $GITHUB_ENV
          rm -rf bin tmp
          zip -r ../artifact/$DEVICE-ipk.zip ../artifact/package/*.ipk
          cd ..
          mv artifact $GITHUB_WORKSPACE

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.workflow_token }}
          file: ./artifact/*.zip
          tag: ${{env.strDate}}
          file_glob: true
          overwrite: true
          release_name: ${{env.strDate}} IPK插件
   
      - name: Save cache state
        #if: env.TG
        run: |
          cd
          sleep 120
          sudo umount lede
          sudo losetup -d $LOOP_DEVICE
          export AUTH="Authorization: token ${{ secrets.workflow_token }}"
          export cache_path='github.com/repos/00575/Nanopi/releases'
          export cache_repo_id='41637325'
          ret=$(curl -sH "$AUTH" "https://api.$cache_path/tags/cache")
          echo $ret | jq -r '.assets[] | select(.name | contains ("'$DEVICE'.img")).id' | \
          xargs -n1 -i curl -X DELETE -H "$AUTH" "https://api.$cache_path/assets/{}"
          echo $ret | jq -r '.assets[] | select(.name == "ib-'$DEVICE'.tar.xz").id' | \
          xargs -n1 -i curl -X DELETE -H "$AUTH" "https://api.$cache_path/assets/{}"
          #zstdmt -c --adapt --long lede.img | parallel --wc --block 1.99G --pipe \
          #'curl -s --data-binary @- -H "$AUTH" -H "Content-Type: application/octet-stream" https://uploads.$cache_path/$cache_repo_id/assets?name=lede.'$DEVICE'.img.zst.0{#} > /dev/null'
          zstdmt -c --long lede.img | split --numeric=1 -b 2000m - lede.$DEVICE.img.zst.
          #for f in *img.zst*
          #do
          #  while true; do curl --data-binary @$f -H "$AUTH" -H 'Content-Type: application/octet-stream' "https://uploads.$cache_path/$cache_repo_id/assets?name=$f" && break || true; done
          #done
          ls *img.zst* ib-$DEVICE.tar.xz | parallel --wc 'while true; do curl -T {} -H "$AUTH" -H "Content-Type: application/octet-stream" "https://uploads.$cache_path/$cache_repo_id/assets?name={}" && break || true; done'
      
