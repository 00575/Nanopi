name: Update Checker

on: 
  workflow_dispatch:
    inputs:
      package_clean:
        description: 'check to make clean package'
        default: 'false'
        required: true
  schedule:
    - cron: 00 20 * * *

jobs:
  update:
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
 
      - name: 设置当前的日期
        id: date
        run: |
          #echo "date=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
          echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
 
      - name: 设置帐户
        run: git config --global user.name '00575' && git config --global user.email 'xixiaaijia@gmail.com'

      - name: 下载并修改文件
        run: | 
          svn export https://github.com/klever1988/nanopi-openwrt/trunk/ new
          cp -rf new/*.seed ./
          cp -rf new/scripts/merge_files.sh ./scripts/
          cp -rf new/scripts/merge_packages.sh ./scripts/
          cp -rf new/scripts/patches.sh ./scripts/
          sed -i 's?klever1988/nanopi-openwrt?00575/Nanopi?g' scripts/patches.sh
          sed -i 's/openwrt2020/argon/g' scripts/patches.sh
          rm -rf new
          wget -qO scripts/kernel https://github.com/immortalwrt/immortalwrt/raw/openwrt-18.06-k5.4/include/kernel-version.mk
          sed -i '8,14!d' scripts/kernel
          wget -qO scripts/autoupdate.sh https://github.com/klever1988/nanopi-openwrt/raw/master/scripts/autoupdate.sh
          sed -i 's?klever1988/nanopi-openwrt?00575/Nanopi?g' scripts/autoupdate.sh
          wget -qO scripts/autoupdate-bash.sh https://github.com/klever1988/nanopi-openwrt/raw/master/scripts/autoupdate-bash.sh
          sed -i 's?klever1988/nanopi-openwrt?00575/Nanopi?g' scripts/autoupdate-bash.sh
                             
      - name: 添加文件到暂存区
        run: git add .
             
      - name: 暂存区全部文件替换工作区
        run: git checkout .

      - name: 提交
        run: git commit -am 'update-${{ env.date }}'

      - name: 同步
        run: git push

      - name: 删除工作流
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 0

  Repo-Dispatcher:
    needs: update
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        device: [r1p, r1s, r1s-h3, r2c, r2s, r4s, x86]
    
    steps:
      - name: Trigger Compile
        run: |
          if [ '${{ matrix.device }}' = 'r1s' ]; then
            branch='18.06';
          else
            branch='master';
          fi
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.workflow_token }}" \
          -d '{"event_type": "${{ matrix.device }}", "client_payload": {"branch": "'$branch'", "device": "${{ matrix.device }}", "package_clean": "${{ github.event.inputs.package_clean }}" }}'
