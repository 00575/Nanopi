name: Kernel update

env:
  REPO_URL: https://github.com/00575/file
  REPO_BRANCH: master

on:
  #schedule:
    #- cron: 00 18 * * *
  workflow_dispatch:
    inputs:
      package_clean:
        description: 'check to make clean package'
        default: 'false'
        required: true

jobs:
  build_packages:
    name: Kernel-update
    runs-on: ubuntu-20.04

    steps:

    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH .
        echo "::set-output name=commitHash::$(git rev-parse HEAD)"

    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash
        key: HEAD-${{ steps.getHash.outputs.commitHash }}

    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash }} | tee .commitHash

    #- name: Trigger Compile
      #run: |
        #curl \
        #-X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/12635960/dispatches \
        #-H "Accept: application/vnd.github.everest-preview+json" \
        #-H "Authorization: token ${{ secrets.workflow_token }}" \
        #-d '{"event_type": "${{ matrix.device }}", "client_payload": {"branch": "'$branch'", "device": "${{ matrix.device }}", "package_clean": "${{ github.event.inputs.package_clean }}" }}'


  Dispatcher:
    needs: build_packages
    if: steps.cacheHash.outputs.cache-hit != 'true'
    name: Repo-Dispatcher
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        device: [r1p, r1s, r1s-h3, r2c, r2s, r4s, x86]
    
    steps:
      - name: Trigger Compile
        run: |
          if [ '${{ matrix.device }}' = 'r1s' ]; then
            branch='18.06';
          else
            branch='master';
          fi
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.workflow_token }}" \
          -d '{"event_type": "${{ matrix.device }}", "client_payload": {"branch": "'$branch'", "device": "${{ matrix.device }}", "package_clean": "${{ github.event.inputs.package_clean }}" }}'
