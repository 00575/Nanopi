name: test

on:
  workflow_dispatch:

jobs:

  build_packages:
    name: Build r2s
    runs-on: ubuntu-20.04
    env:
      DEVICE: r2s

    steps:

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo sysctl vm.swappiness=0
          nohup sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk &
          sudo -E apt update
          nohup sudo -E apt -y --no-install-recommends install pv jq build-essential cmake asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python2.7 python3 python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf intltool mkisofs rsync swig &
      
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          
      - name: Generate firmware
        run: |
          sudo apt update && sudo apt install qemu-utils
          sudo sysctl vm.swappiness=0
          curl -L https://github.com/00575/file/releases/download/cache/ib-$DEVICE.tar.xz | tar -Jxvf -
          mv *imagebuilder* ib && cd ib
          . $GITHUB_WORKSPACE/scripts/merge_files.sh
          mkdir -p files/local_feed && sudo mount --bind packages files/local_feed
          sed -i 's/luci-app-[^ ]*//g' include/target.mk $(find target/ -name Makefile)
          sed -i 's/$(OPKG) install $(BUILD_PACKAGES)/$(OPKG) install --force-overwrite $(BUILD_PACKAGES)/' Makefile
          ls packages/*.ipk | xargs -n1 basename > package.files
          PACKAGES=$(cat $GITHUB_WORKSPACE/$DEVICE.config $GITHUB_WORKSPACE/common.seed | grep CONFIG_PACKAGE | grep -v CONFIG_PACKAGE_luci-app | sed 's/CONFIG_PACKAGE_//;s/=y//' | xargs -n1 -i grep -o {} package.files | sort -u | xargs echo)
          [ $DEVICE != 'r1s' ] && PACKAGES="$PACKAGES luci-i18n-opkg-zh-cn"
          make image PACKAGES="$PACKAGES $LUCI $LP luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn" FILES="files"

          mkdir -p $GITHUB_WORKSPACE/release
          mv $(ls -1 ./bin/targets/*/*/*img.gz | head -1) $GITHUB_WORKSPACE/release/$DEVICE.img.gz
          cd $GITHUB_WORKSPACE/release/ && md5sum $DEVICE.img.gz > $DEVICE.img.gz.md5
          gzip -dc $DEVICE.img.gz | md5sum | sed "s/-/$DEVICE.img/" > $DEVICE.img.md5
          rm -rf $DEVICE.img.gz.md5
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "strDevice=$(echo $DEVICE | awk '{print toupper($0)}')" >> $GITHUB_ENV
          
      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.workflow_token }}
          file: ./release/*
          tag: Test-${{env.strDate}}
          file_glob: true
          overwrite: true
          release_name: r2s-自用-${{env.strDate}}
         
      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 1
